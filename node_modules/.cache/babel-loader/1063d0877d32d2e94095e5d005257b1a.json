{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Matheus Cavalcante\\\\Documents\\\\react function\\\\form_cad\\\\src\\\\components\\\\FormularioCadastro\\\\Dados Pessoais.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { TextField, Button, Switch, FormControlLabel } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DadosPessoais({\n  aoEnviar,\n  validacoes\n}) {\n  _s();\n\n  const [nome, setNome] = useState(\"\");\n  const [sobrenome, setSobrenome] = useState(\"\");\n  const [cpf, setCpf] = useState(\"\");\n  const [promocoes, setPromocoes] = useState(true);\n  const [novidades, setNovidades] = useState(false);\n  const [erros, setErros] = useState({\n    cpf: {\n      valido: true,\n      texto: \"\"\n    },\n    nome: {\n      valido: true,\n      texto: \"\"\n    }\n  });\n\n  function validarCampos(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    const novoEstado = { ...erros\n    };\n    novoEstado[name] = validacoes[name](value);\n    setErros(novoEstado);\n  }\n\n  function possoEnviar() {\n    for (let campo in erros) {\n      if (!erros[campo].valido) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: event => {\n      event.preventDefault();\n\n      if (possoEnviar()) {\n        aoEnviar({\n          nome,\n          sobrenome,\n          cpf,\n          novidades,\n          promocoes\n        });\n      }\n    },\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      value: nome,\n      onChange: event => {\n        setNome(event.target.value);\n      },\n      onBlur: validarCampos,\n      error: !erros.nome.valido,\n      helperText: erros.nome.texto,\n      id: \"nome\",\n      label: \"Nome\",\n      name: \"nome\",\n      variant: \"outlined\",\n      margin: \"normal\",\n      fullWidth: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      value: sobrenome,\n      onChange: event => {\n        setSobrenome(event.target.value);\n      },\n      id: \"sobrenome\",\n      name: \"sobrenome\",\n      label: \"Sobrenome\",\n      variant: \"outlined\",\n      margin: \"normal\",\n      fullWidth: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      value: cpf,\n      onChange: event => {\n        setCpf(event.target.value);\n      },\n      onBlur: validarCampos,\n      error: !erros.cpf.valido,\n      helperText: erros.cpf.texto,\n      id: \"CPF\",\n      name: \"cpf\",\n      label: \"CPF\",\n      variant: \"outlined\",\n      margin: \"normal\",\n      fullWidth: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      label: \"Promo\\xE7\\xF5es\",\n      control: /*#__PURE__*/_jsxDEV(Switch, {\n        checked: promocoes,\n        onChange: event => {\n          setPromocoes(event.target.checked);\n        },\n        name: \"promocoes\",\n        color: \"primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      label: \"Novidades\",\n      control: /*#__PURE__*/_jsxDEV(Switch, {\n        checked: novidades,\n        onChange: event => {\n          setNovidades(event.target.checked);\n        },\n        name: \"novidades\",\n        color: \"primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      color: \"primary\",\n      children: \"Pr\\xF3ximo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DadosPessoais, \"IHETyOXXgSCZvMx3FYuraoqCcdM=\");\n\n_c = DadosPessoais;\nexport default DadosPessoais;\n\nvar _c;\n\n$RefreshReg$(_c, \"DadosPessoais\");","map":{"version":3,"sources":["C:/Users/Matheus Cavalcante/Documents/react function/form_cad/src/components/FormularioCadastro/Dados Pessoais.jsx"],"names":["React","useState","TextField","Button","Switch","FormControlLabel","DadosPessoais","aoEnviar","validacoes","nome","setNome","sobrenome","setSobrenome","cpf","setCpf","promocoes","setPromocoes","novidades","setNovidades","erros","setErros","valido","texto","validarCampos","event","name","value","target","novoEstado","possoEnviar","campo","preventDefault","checked"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { TextField, Button, Switch, FormControlLabel } from \"@material-ui/core\";\r\n\r\nfunction DadosPessoais({ aoEnviar, validacoes }) {\r\n  const [nome, setNome] = useState(\"\");\r\n  const [sobrenome, setSobrenome] = useState(\"\");\r\n  const [cpf, setCpf] = useState(\"\");\r\n  const [promocoes, setPromocoes] = useState(true);\r\n  const [novidades, setNovidades] = useState(false);\r\n  const [erros, setErros] = useState({ cpf: { valido: true, texto: \"\" }, nome: { valido: true, texto: \"\" } });\r\n\r\n  function validarCampos(event) {\r\n    const { name, value } = event.target;\r\n    const novoEstado = { ...erros };\r\n    novoEstado[name] = validacoes[name](value);\r\n    setErros(novoEstado);\r\n  }\r\n  function possoEnviar() {\r\n    for (let campo in erros) {\r\n      if (!erros[campo].valido) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n  return (\r\n    <form\r\n      onSubmit={(event) => {\r\n        event.preventDefault();\r\n        if (possoEnviar()) {\r\n          aoEnviar({ nome, sobrenome, cpf, novidades, promocoes });\r\n        }\r\n      }}\r\n    >\r\n      <TextField\r\n        value={nome}\r\n        onChange={(event) => {\r\n          setNome(event.target.value);\r\n        }}\r\n        onBlur={validarCampos}\r\n        error={!erros.nome.valido}\r\n        helperText={erros.nome.texto}\r\n        id=\"nome\"\r\n        label=\"Nome\"\r\n        name=\"nome\"\r\n        variant=\"outlined\"\r\n        margin=\"normal\"\r\n        fullWidth\r\n      />\r\n      <TextField\r\n        value={sobrenome}\r\n        onChange={(event) => {\r\n          setSobrenome(event.target.value);\r\n        }}\r\n        id=\"sobrenome\"\r\n        name=\"sobrenome\"\r\n        label=\"Sobrenome\"\r\n        variant=\"outlined\"\r\n        margin=\"normal\"\r\n        fullWidth\r\n      />\r\n      <TextField\r\n        value={cpf}\r\n        onChange={(event) => {\r\n          setCpf(event.target.value);\r\n        }}\r\n        onBlur={validarCampos}\r\n        error={!erros.cpf.valido}\r\n        helperText={erros.cpf.texto}\r\n        id=\"CPF\"\r\n        name=\"cpf\"\r\n        label=\"CPF\"\r\n        variant=\"outlined\"\r\n        margin=\"normal\"\r\n        fullWidth\r\n      />\r\n\r\n      <FormControlLabel\r\n        label=\"Promoções\"\r\n        control={\r\n          <Switch\r\n            checked={promocoes}\r\n            onChange={(event) => {\r\n              setPromocoes(event.target.checked);\r\n            }}\r\n            name=\"promocoes\"\r\n            color=\"primary\"\r\n          />\r\n        }\r\n      />\r\n\r\n      <FormControlLabel\r\n        label=\"Novidades\"\r\n        control={\r\n          <Switch\r\n            checked={novidades}\r\n            onChange={(event) => {\r\n              setNovidades(event.target.checked);\r\n            }}\r\n            name=\"novidades\"\r\n            color=\"primary\"\r\n          />\r\n        }\r\n      />\r\n\r\n      <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n        Próximo\r\n      </Button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default DadosPessoais;"]},"metadata":{},"sourceType":"module"}