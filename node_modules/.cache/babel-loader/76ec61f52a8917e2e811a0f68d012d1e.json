{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Matheus Cavalcante\\\\Documents\\\\react function\\\\form_cad\\\\src\\\\components\\\\FormularioCadastro\\\\Dados Pessoais.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport { Button, TextField, Switch, FormControlLabel } from '@material-ui/core';\nimport { ValidacaoCadastro } from '../src/contexts/ValidacaoCadastro.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DadosPessoais({\n  aoEnviar\n}) {\n  _s();\n\n  const [nome, setNome] = useState(\"\");\n  const [sobrenome, setSobrenome] = useState(\"\");\n  const [cpf, setCPF] = useState(\" \");\n  const [promocoes, setPromocoes] = useState(true);\n  const [novidades, setNovidades] = useState(true);\n  const [erros, setErros] = useState({\n    cpf: {\n      valido: true,\n      texto: \"\"\n    }\n  });\n  const validacoes = useContext(ValidacaoCadastro);\n\n  function validaCampos(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    const novoEstado = { ...erros\n    };\n    novoEstado[name] = validacoes[name](value);\n    setErros(novoEstado);\n  }\n\n  function possoEnviar() {\n    for (let campo in erros) {\n      if (!erros[campo].valido) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: event => {\n      event.preventDefault();\n\n      if (possoEnviar()) {\n        aoEnviar({\n          nome,\n          sobrenome,\n          cpf,\n          novidades,\n          promocoes\n        });\n      }\n    },\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      value: nome,\n      onChange: event => {\n        setNome(event.target.value);\n      },\n      id: \"nome\",\n      label: \"Nome\",\n      variant: \"outlined\",\n      margin: \"normal\",\n      required: true,\n      fullWidth: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      value: sobrenome,\n      onChange: event => {\n        setSobrenome(event.target.value);\n      },\n      id: \"sobrenome\",\n      label: \"Sobrenome\",\n      variant: \"outlined\",\n      margin: \"normal\",\n      required: true,\n      fullWidth: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      value: cpf,\n      onChange: event => {\n        setCPF(event.target.value);\n      },\n      onBlur: validaCampos,\n      error: !erros.cpf.valido,\n      helperText: erros.cpf.texto,\n      id: \"cpf\",\n      name: \"cpf\",\n      label: \"CPF\",\n      variant: \"outlined\",\n      margin: \"normal\",\n      required: true,\n      fullWidth: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      label: \"Promo\\xE7\\xF5es\",\n      control: /*#__PURE__*/_jsxDEV(Switch, {\n        checked: promocoes,\n        onChange: event => {\n          setPromocoes(event.target.checked);\n        },\n        name: \"promo\\xE7\\xF5es\",\n        color: \"primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      label: \"Novidades\",\n      control: /*#__PURE__*/_jsxDEV(Switch, {\n        checked: novidades,\n        onChange: event => {\n          setNovidades(event.target.checked);\n        },\n        name: \"novidades\",\n        color: \"primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      type: \"submit\",\n      fullWidth: true,\n      children: \"Pr\\xF3ximo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DadosPessoais, \"lZo+SDkeiBOcRAesV7Ojc4rbM9Q=\");\n\n_c = DadosPessoais;\nexport default DadosPessoais;\n\nvar _c;\n\n$RefreshReg$(_c, \"DadosPessoais\");","map":{"version":3,"sources":["C:/Users/Matheus Cavalcante/Documents/react function/form_cad/src/components/FormularioCadastro/Dados Pessoais.jsx"],"names":["React","useState","useContext","Button","TextField","Switch","FormControlLabel","ValidacaoCadastro","DadosPessoais","aoEnviar","nome","setNome","sobrenome","setSobrenome","cpf","setCPF","promocoes","setPromocoes","novidades","setNovidades","erros","setErros","valido","texto","validacoes","validaCampos","event","name","value","target","novoEstado","possoEnviar","campo","preventDefault","checked"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport { Button, TextField, Switch, FormControlLabel } from '@material-ui/core';\r\nimport { ValidacaoCadastro } from '../src/contexts/ValidacaoCadastro.js'\r\n\r\nfunction DadosPessoais({ aoEnviar }) {\r\n\r\n    const [nome, setNome] = useState(\"\");\r\n    const [sobrenome, setSobrenome] = useState(\"\");\r\n    const [cpf, setCPF] = useState(\" \");\r\n    const [promocoes, setPromocoes] = useState(true);\r\n    const [novidades, setNovidades] = useState(true);\r\n    const [erros, setErros] = useState({ cpf: { valido: true, texto: \"\" } })\r\n\r\n    const validacoes = useContext(ValidacaoCadastro)\r\n    function validaCampos(event) {\r\n        const { name, value } = event.target;\r\n        const novoEstado = { ...erros };\r\n        novoEstado[name] = validacoes[name](value);\r\n        setErros(novoEstado);\r\n    }\r\n\r\n    function possoEnviar() {\r\n        for (let campo in erros) {\r\n            if (!erros[campo].valido) {\r\n                return false\r\n            }\r\n        }\r\n        return true\r\n    }\r\n\r\n    return (\r\n        <form\r\n            onSubmit={(event) => {\r\n                event.preventDefault();\r\n                if (possoEnviar()) {\r\n                    aoEnviar({ nome, sobrenome, cpf, novidades, promocoes });\r\n                }\r\n\r\n            }}>\r\n\r\n\r\n            <TextField\r\n                value={nome}\r\n                onChange={(event) => {\r\n                    setNome(event.target.value);\r\n                }}\r\n                id=\"nome\"\r\n                label=\"Nome\"\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n            />\r\n\r\n            <TextField\r\n                value={sobrenome}\r\n                onChange={(event) => {\r\n                    setSobrenome(event.target.value);\r\n                }}\r\n                id=\"sobrenome\"\r\n                label=\"Sobrenome\"\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n            />\r\n\r\n            <TextField\r\n                value={cpf}\r\n                onChange={(event) => {\r\n                    setCPF(event.target.value);\r\n                }}\r\n\r\n                onBlur={validaCampos}\r\n                error={!erros.cpf.valido}\r\n                helperText={erros.cpf.texto}\r\n                id=\"cpf\"\r\n                name=\"cpf\"\r\n                label=\"CPF\"\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n            />\r\n\r\n            <FormControlLabel\r\n                label=\"Promoções\"\r\n                control={\r\n                    <Switch\r\n                        checked={promocoes}\r\n                        onChange={(event) => {\r\n                            setPromocoes(event.target.checked);\r\n                        }}\r\n                        name=\"promoções\"\r\n                        color=\"primary\"\r\n                    />\r\n                }\r\n            />\r\n\r\n            <FormControlLabel\r\n                label=\"Novidades\"\r\n                control={\r\n                    <Switch\r\n                        checked={novidades}\r\n                        onChange={(event) => {\r\n                            setNovidades(event.target.checked);\r\n                        }}\r\n                        name=\"novidades\"\r\n                        color=\"primary\"\r\n                    />\r\n                }\r\n            />\r\n\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n                fullWidth>\r\n                Próximo\r\n            </Button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default DadosPessoais;"]},"metadata":{},"sourceType":"module"}